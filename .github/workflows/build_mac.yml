name: build wheels for macos

on:
  push:
    branches:
      - notmaster

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]
        architecture: [x64]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Cache conda
      uses: actions/cache@v2
      env:
        CACHE_NUMBER: 0  # Invalidate cache by changing this number
      with:
        path: ~/miniconda/envs
        key: mmf-cpu-${{ matrix.platform }}-python${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/setup.py') }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install miniconda
      uses: goanpeca/setup-miniconda@v1
      with:
        python-version: ${{ matrix.python-version }}
        channels: conda-forge

    - name: Install conda packages
      shell: bash -l {0}
      run: |
        conda update -n base -c defaults conda
        conda install numpy fftw pip
        export LIBRARY_PATH="${CONDA_PREFIX}"/lib
        export C_INCLUDE_PATH="${CONDA_PREFIX}"/include

    - name: Build wheel
      shell: bash -l {0}
      run: |
        pip install --upgrade pip wheel auditwheel
        pip install -r ./python/dev-requirements.txt
        python setup.py bdist_wheel

    - name: Upload wheel
      uses: actions/upload-artifact@v1
      with:
        name: dist_${{ matrix.os }}_${{ matrix.architecture }}_${{ matrix.python-version }}
        path: dist

    - name: Publish to PyPI
      env:
        PYPI_USERNAME: __token__
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        python -m twine upload -u ${PYPI_USERNAME} -p ${PYPI_PASSWORD} dist/*
      shell: bash -l {0}
